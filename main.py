#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã Telegram Chat Exporter
"""
import asyncio
import sys
import logging
from src.config import Config
from src.auth import TelegramAuth
from src.chat_manager import ChatManager
from src.csv_exporter import CSVExporter
from src.ui import UserInterface

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    try:
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        UserInterface.display_welcome()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        if not Config.validate():
            print("\nüìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ")
            return
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        auth = TelegramAuth()
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram
        print("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API...")
        if not await auth.connect():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram API")
            return
        
        # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
        print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
        if not await auth.authenticate():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è")
            await auth.disconnect()
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        client = auth.get_client()
        chat_manager = ChatManager(client)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤
        print("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤...")
        chats = await chat_manager.get_available_chats()
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —á–∞—Ç—ã
        UserInterface.display_chats(chats)
        
        # –í—ã–±–∏—Ä–∞–µ–º —á–∞—Ç
        selected_chat_id = UserInterface.select_chat(chats)
        if not selected_chat_id:
            print("‚ùå –ß–∞—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω")
            await auth.disconnect()
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —á–∞—Ç–µ
        selected_chat = await chat_manager.get_chat_by_id(selected_chat_id)
        if not selected_chat:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ")
            await auth.disconnect()
            return
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–∞
        if not UserInterface.confirm_export(selected_chat['title'], 0):
            print("‚ùå –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç–º–µ–Ω–µ–Ω")
            await auth.disconnect()
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        print("üë• –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤...")
        participants = await chat_manager.get_chat_participants(selected_chat_id)
        
        if not participants:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞")
            await auth.disconnect()
            return
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        if not UserInterface.confirm_export(selected_chat['title'], len(participants)):
            print("‚ùå –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç–º–µ–Ω–µ–Ω")
            await auth.disconnect()
            return
        
        # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ CSV
        print("üìä –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV...")
        filename = CSVExporter.export_participants(participants, selected_chat['title'])
        
        if filename:
            UserInterface.display_completion()
            print(f"üìÅ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {filename}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ")
        
        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è
        await auth.disconnect()
        
    except KeyboardInterrupt:
        print("\n‚ùå –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
    if sys.version_info < (3, 7):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7 –∏–ª–∏ –≤—ã—à–µ")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—É
    asyncio.run(main()) 